---
import { getNodeByURI } from "../lib/api";
const uri = `/${Astro.params.uri}/`;
const data = await getNodeByURI(uri);
const node = data.nodeByUri;

//simple breadcrumbs, only one level deep
const getBreadCrumbs = (node) => {
  const type = node.__typename;
  let out = 'You are here: <a href="/">Home</a> > ';

  if (type === 'Tag' || type === 'Category' || type === 'Archive') {
    if (type === 'Tag') {
      out += `Posts tagged "${node.name}"`;
    } else {
      out += `Archive by category "${node.name}"`;
    }
  } else if (type === 'Post') {
    if (node.categories.nodes.length) {
      // get the first category
      out += `<a href="${node.categories.nodes[0].uri}">${node.categories.nodes[0].name}</a> > `;
    }
  }

  out += node.title;

  return out;
};
---

<footer transition:animate="fade">
  {Astro.params.uri !== undefined && (
    <div transition:animate="fade">
      <small set:html={getBreadCrumbs(node)} />
    </div>
  )}
  <hr />
  <small>
    built with <a href="https://astro.build/" target="_blank">Astro</a>, headless WordPress and <a href="https://www.wpgraphql.com/" target="_blank">GraphQL</a>, hosted on <a href="https://www.netlify.com/" target="_blank">Netlify</a>
  </small>
</footer>

<style lang="scss">
  @use '../styles/abstracts/functions/rem.scss' as *;

  footer {
    max-width: rem(760);
    width: 100%;
    margin: 0 auto;
    padding-top: rem(12);
    text-align: center;

    hr {
      margin: rem(15) 0;
    }
  }
</style>
